name: CI pipeline

on:
  push:
    branches:
      - main
      - test

jobs:
  build-amd64:
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Check node_modules
        run: ls -la node_modules

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-amd64-${{ hashFiles('Dockerfile') }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-docker-amd64-

      - name: Check Docker cache
        run: ls -la /tmp/.buildx-cache

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image for amd64
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --file Dockerfile \
            --tag ghcr.io/${{ github.repository_owner }}/react-app:amd64-${{ github.sha }} \
            --tag ghcr.io/${{ github.repository_owner }}/react-app:amd64-latest \
            --push .

  build-arm64:
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Check node_modules
        run: ls -la node_modules

      - name: Cache node_modules
        uses: actions/cache@v4

      
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3


      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-arm64-${{ hashFiles('Dockerfile') }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-docker-arm64-
      
      - name: Check Docker cache
        run: ls -la /tmp/.buildx-cache

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image for arm64
        run: |
          docker buildx build \
            --platform linux/arm64 \
            --file Dockerfile \
            --tag ghcr.io/${{ github.repository_owner }}/react-app:arm64-${{ github.sha }} \
            --tag ghcr.io/${{ github.repository_owner }}/react-app:arm64-latest \
            --push .

  test:
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker image from GHCR
        run: |
          docker pull ghcr.io/${{ github.repository_owner }}/react-app:amd64-${{ github.sha }}

      - name: Run Testing
        run: |
          docker run --rm ghcr.io/${{ github.repository_owner }}/react-app:amd64-${{ github.sha }} npm run test:unit

  lint:
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker image from GHCR
        run: |
          docker pull ghcr.io/${{ github.repository_owner }}/react-app:amd64-${{ github.sha }}

      - name: Run Linting
        run: |
          docker run --rm ghcr.io/${{ github.repository_owner }}/react-app:amd64-${{ github.sha }} npm run lint
